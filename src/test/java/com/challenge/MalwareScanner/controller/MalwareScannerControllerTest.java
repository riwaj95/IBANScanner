package com.challenge.MalwareScanner.controller;

import com.challenge.MalwareScanner.model.CheckEvent;
import com.challenge.MalwareScanner.producer.KafkaProducer;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.ArgumentCaptor;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.http.MediaType;
import org.springframework.mock.web.MockMultipartFile;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.multipart;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

@ExtendWith(MockitoExtension.class)
class MalwareScannerControllerTest {

    private MockMvc mockMvc;
    @Mock
    private KafkaProducer kafkaProducer;

    @InjectMocks
    private MalwareScannerController malwareScannerController;

    @BeforeEach
    public void setup() {
        mockMvc = MockMvcBuilders.standaloneSetup(malwareScannerController).build();
    }

    @Test
    void uploadFile() throws Exception{
        MockMultipartFile file = new MockMultipartFile("file", "test.pdf", MediaType.APPLICATION_PDF_VALUE, "PDF content".getBytes());

        mockMvc.perform(multipart("/api/scan/upload").file(file))
                .andExpect(status().isOk());

        ArgumentCaptor<CheckEvent> captor = ArgumentCaptor.forClass(CheckEvent.class);
        verify(kafkaProducer, times(1)).sendCheckEvent(captor.capture());

        CheckEvent capturedEvent = captor.getValue();
        assertEquals("application/pdf", capturedEvent.getFileType());
    }
}