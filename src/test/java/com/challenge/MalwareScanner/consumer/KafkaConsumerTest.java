package com.challenge.MalwareScanner.consumer;

import com.challenge.MalwareScanner.core.ContentExtractorControl;
import com.challenge.MalwareScanner.core.PdfProcessingException;
import com.challenge.MalwareScanner.model.CheckEvent;
import com.challenge.MalwareScanner.model.CheckResultEvent;
import com.challenge.MalwareScanner.model.StateEnum;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.kafka.core.KafkaTemplate;

import java.io.InputStream;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
class KafkaConsumerTest {

    @Mock
    private KafkaTemplate<String, CheckResultEvent> kafkaTemplate;

    @Mock
    private ContentExtractorControl contentExtractorControl;

    @InjectMocks
    private KafkaConsumer kafkaConsumer;

    @Test
    void scanPdfWithBlacklistedIban() throws PdfProcessingException {
        CheckEvent checkEvent = new CheckEvent();
        checkEvent.setUrl("https://www.africau.edu/images/default/sample.pdf");

        when(contentExtractorControl.extractContent(any(InputStream.class)))
                .thenReturn("UU33");

        CheckResultEvent resultEvent = kafkaConsumer.scanPdf(checkEvent);

        assertEquals(StateEnum.SUSPICIOUS, resultEvent.getState());
        assertEquals("Blacklisted IBAN found in the document.", resultEvent.getDetails());

    }

    @Test
    void scanPdfWithoutBlacklistedIban() throws PdfProcessingException {
        CheckEvent checkEvent = new CheckEvent();
        checkEvent.setUrl("https://www.africau.edu/images/default/sample.pdf");

        when(contentExtractorControl.extractContent(any(InputStream.class)))
                .thenReturn("Content without blacklisted IBAN");

        CheckResultEvent resultEvent = kafkaConsumer.scanPdf(checkEvent);

        assertEquals(StateEnum.OK, resultEvent.getState());
        assertEquals("No blacklisted IBANs found.", resultEvent.getDetails());

    }
}